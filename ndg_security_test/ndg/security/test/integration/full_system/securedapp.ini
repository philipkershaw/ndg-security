#
# NDG Security AuthZ WSGI Testing environment configuration.  This ini file
# defines the configuration for a an application to be secured.  Security
# filters placed in front of the application in the WSGI pipeline act as
# client to security services running on a separate application stack.  - See
# securityservices.ini
#
# NERC DataGrid
#
# Author: P J Kershaw
#
# Date: 01/07/09
#
# Copyright: STFC 2009
#
# Licence: BSD - See top-level LICENCE file for licence details
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
testConfigDir = %(here)s/../../config
beakerSessionKeyName = beaker.session.ndg.security

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 7080

[pipeline:main]
pipeline = BeakerSessionFilter 
		   AuthenticationFilter 
		   AuthorisationFilter 
		   AuthZTestApp

[app:AuthZTestApp]
paste.app_factory = ndg.security.test.integration:AuthZTestApp.app_factory


[filter:BeakerSessionFilter]
paste.filter_app_factory = beaker.middleware:SessionMiddleware

# Cookie name
beaker.session.key = ndg.security.session

# WSGI environ key name
environ_key = %(beakerSessionKeyName)s
beaker.session.secret = rBIvKXLa+REYB8pM/8pdPoorVpKQuaOW
beaker.cache.data_dir = %(here)s/authn/beaker/cache
beaker.session.data_dir = %(here)s/authn/beaker/sessions

#beaker.session.cookie_domain = .localhost

[filter:AuthenticationFilter]
paste.filter_app_factory = ndg.security.server.wsgi.authn:AuthenticationMiddleware
prefix = authN.

# Set redirect for OpenID Relying Party in the Security Services app instance
authN.redirectURI = https://localhost:7443/verify

# Default URI to return to if middleware wasn't able to set via HTTP_REFERER or
# passed return to query argument
authN.sessionHandler.defaultLogoutReturnToURI = https://localhost:7443/

# AuthKit Set-up
authkit.setup.method=cookie

# This cookie name and secret MUST agree with the name used by the security web
# services app
authkit.cookie.name=ndg.security.auth
authkit.cookie.secret=9wvZObs9anUEhSIAnJNoY2iJq59FfYZr
authkit.cookie.signoutpath = /logout

# Disable inclusion of client IP address from cookie signature due to 
# suspected problem with AuthKit setting it when a HTTP Proxy is in place
authkit.cookie.includeip = False

#authkit.cookie.params.expires = 2
#authkit.cookie.params.domain = .localhost

# environ key name for beaker session
authkit.session.middleware = %(beakerSessionKeyName)s

#
# Authorisation filter contains a Policy Enforcement Point which enforces access
# control decisions made by the Authorisation Service 
[filter:AuthorisationFilter]
paste.filter_app_factory=ndg.security.server.wsgi.authz:AuthorisationFilter.filter_app_factory

# Result handler handles the response for HTTP 403 responses set by the 
# application or the PEP.
resultHandler = ndg.security.server.wsgi.authz.result_handler.genshi.GenshiPEPResultHandlerMiddleware
resultHandler.staticContentDir = %(here)s/pep_result_handler
resultHandler.heading = NDG Security Integration Tests

# Settings for the PEP (Policy Enforcement Point)
pep.sessionKey = beaker.session.ndg.security
pep.authzServiceURI = https://localhost:7443/AuthorisationService
pep.cacheDecisions = True

# Including this setting activates a simple PDP local to this PEP which filters 
# requests to cut down on calls to the authorisation service.  This is useful
# for example to avoid calling the authorisation service for non-secure content
# such as HTML CSS or graphics.  Note that filters based on resource URI 
# requested alone.  Subject, action and environment settings are not passed in 
# the request context to the local PDP.
#
# The policy content should be set carefully to avoid unintended override of the
# authorisation service's policy
pep.localPolicyFilePath = %(here)s/request-filter.xml

# Settings for Policy Information Point used by the Policy Decision Point to
# retrieve subject attributes from the Attribute Authority associated with the
# resource to be accessed

# If omitted, DN of SSL Cert is used
pep.authzDecisionQuery.issuerName = /O=NDG/OU=BADC/CN=test
pep.authzDecisionQuery.issuerFormat = urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName
pep.authzDecisionQuery.subjectIdFormat = urn:esg:openid
pep.authzDecisionQuery.clockSkewTolerance = 0.
pep.authzDecisionQuery.sslCACertDir=%(testConfigDir)s/ca
pep.authzDecisionQuery.sslCertFilePath=%(testConfigDir)s/pki/test.crt
pep.authzDecisionQuery.sslPriKeyFilePath=%(testConfigDir)s/pki/test.key

# Logging configuration
[loggers]
keys = root, ndg

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ndg]
level = DEBUG
handlers =
qualname = ndg

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s.%(msecs)03d %(levelname)-7.7s [%(name)s:%(lineno)s] %(message)s
datefmt = %Y-%m-%d-%H:%M:%S

