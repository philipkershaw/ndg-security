#
# PasteDeploy ini file for Attribute Authority Unit tests Site A Server
# 
# NERC Data Grid Project
# 
# P J Kershaw 12/09/08
# 
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# BSD - See LICENCE file for details

[DEFAULT]
attributeAuthorityEnvironKeyName = attribute-authority
attributeQueryInterfaceEnvironKeyName = attributeQueryInterface

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5100

[app:mainApp]
paste.app_factory = ndg.security.test.config.attributeauthority.siteb.siteBServerApp:app_factory

# Chain of SOAP Middleware filters
[pipeline:main]
pipeline = AttributeAuthorityFilter 
		   wsseSignatureVerificationFilter 
		   AttributeAuthorityWsdlSoapBindingFilter
		   wsseSignatureFilter 
		   AttributeAuthoritySamlSoapBindingFilter
		   mainApp



[filter:AttributeAuthorityFilter]
paste.filter_app_factory = ndg.security.server.wsgi.attributeauthority:AttributeAuthorityMiddleware.filter_app_factory
prefix = attributeAuthority.

# Key name by which the WSDL SOAP based interface may reference this
# service
attributeAuthority.environKeyName = %(attributeAuthorityEnvironKeyName)s

# Key name for the SAML SOAP binding based interface to reference this
# service's attribute query method
attributeAuthority.environKeyNameAttributeQueryInterface: %(attributeQueryInterfaceEnvironKeyName)s

# Attribute Authority settings
# 'name' setting MUST agree with map config file 'thisHost' name attribute
attributeAuthority.name: Site B

# Lifetime is measured in seconds
attributeAuthority.attCertLifetime: 28800 

# Allow an offset for clock skew between servers running 
# security services. NB, measured in seconds - use a minus sign for time in the
# past
attributeAuthority.attCertNotBeforeOff: 0

# All Attribute Certificates issued are recorded in this dir
attributeAuthority.attCertDir: %(here)s/attributeCertificateLog

# Files in attCertDir are stored using a rotating file handler
# attCertFileLogCnt sets the max number of files created before the first is 
# overwritten
attributeAuthority.attCertFileName: ac.xml
attributeAuthority.attCertFileLogCnt: 16
attributeAuthority.dnSeparator:/

# Location of role mapping file
attributeAuthority.mapConfigFilePath: %(here)s/siteBMapConfig.xml

# Settings for custom AttributeInterface derived class to get user roles for given 
# user ID
attributeAuthority.attributeInterface.modFilePath: %(here)s
attributeAuthority.attributeInterface.modName: siteBUserRoles
attributeAuthority.attributeInterface.className: TestUserRoles

# Config for XML signature of Attribute Certificate
attributeAuthority.signingPriKeyFilePath: %(here)s/siteB-aa.key
attributeAuthority.signingCertFilePath: %(here)s/siteB-aa.crt
attributeAuthority.caCertFilePathList: $NDGSEC_TEST_CONFIG_DIR/ca/ndg-test-ca.crt


# SOAP WSDL Based Binding to the Attribute Authority
[filter:AttributeAuthorityWsdlSoapBindingFilter]
paste.filter_app_factory = ndg.security.server.wsgi.attributeauthority:AttributeAuthoritySOAPBindingMiddleware.filter_app_factory
prefix = service.soap.binding.
attributeAuthoritySOAPBindingPrefix = attributeauthority.service.soap.binding.

service.soap.binding.referencedFilters = wsseSignatureVerificationFilter01
service.soap.binding.path = /AttributeAuthority
service.soap.binding.enableWSDLQuery = True
service.soap.binding.charset = utf-8
service.soap.binding.serviceSOAPBindingEnvironKeyName = ndg.security.server.wsgi.attributeauthority.AttributeAuthoritySOAPBindingMiddleware

attributeauthority.service.soap.binding.attributeAuthorityEnvironKeyName = %(attributeAuthorityEnvironKeyName)s
attributeauthority.service.soap.binding.wsseSignatureVerificationFilterID = wsseSignatureVerificationFilter01


# SAML SOAP Binding to the Attribute Authority
[filter:AttributeAuthoritySamlSoapBindingFilter]
paste.filter_app_factory = ndg.security.server.wsgi.saml:SOAPAttributeInterfaceMiddleware.filter_app_factory
prefix = saml.soapbinding.

saml.soapbinding.pathMatchList = /attributeauthority/saml
saml.soapbinding.queryInterfaceKeyName = %(attributeQueryInterfaceEnvironKeyName)s


[filter:wsseSignatureVerificationFilter]
paste.filter_app_factory = ndg.security.server.wsgi.wssecurity:SignatureVerificationFilter.filter_app_factory
filterID = wsseSignatureVerificationFilter01

# Settings for WS-Security SignatureHandler class used by this filter
wsseCfgFilePrefix = wssecurity

# Verify against known CAs - Provide a space separated list of file paths
wssecurity.caCertFilePathList=$NDGSEC_TEST_CONFIG_DIR/ca/ndg-test-ca.crt

[filter:wsseSignatureFilter]
paste.filter_app_factory = ndg.security.server.wsgi.wssecurity:ApplySignatureFilter.filter_app_factory

# Reference the verification filter in order to be able to apply signature
# confirmation
referencedFilters = wsseSignatureVerificationFilter01
wsseSignatureVerificationFilterID = wsseSignatureVerificationFilter01

# Last filter in chain SOAP handlers writes the response
writeResponse = True

# Settings for WS-Security SignatureHandler class used by this filter
wsseCfgFilePrefix = wssecurity

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
wssecurity.signingCertFilePath=%(here)s/siteB-aa.crt

# PEM encoded private key file
wssecurity.signingPriKeyFilePath=%(here)s/siteB-aa.key

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  See __setReqBinSecTokValType method and binSecTokValType 
# class variable for options - it may be one of X509, X509v3, X509PKIPathv1 or 
# give full namespace to alternative - see 
# ZSI.wstools.Namespaces.OASIS.X509TOKEN
#
# binSecTokValType determines whether signingCert or signingCertChain 
# attributes will be used.
wssecurity.reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
wssecurity.addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
wssecurity.applySignatureConfirmation=True


# Logging configuration
[loggers]
keys = root, ndg

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ndg]
level = DEBUG
handlers =
qualname = ndg

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
