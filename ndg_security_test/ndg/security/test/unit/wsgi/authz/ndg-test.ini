#
# AuthZ WSGI Testing environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
testConfigDir = %(here)s/../../../config

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[pipeline:main]
pipeline = AuthZFilter TestApp

[app:TestApp]
paste.app_factory = ndg.security.test.unit.wsgi.authz.test_authz:TestAuthZMiddleware

[filter:AuthZFilter]
paste.filter_app_factory=ndg.security.server.wsgi.authz:NDGAuthorizationMiddleware.filter_app_factory
prefix = authz.
policy.filePath = %(here)s/ndg-policy.xml

authz.pepResultHandler = ndg.security.test.unit.wsgi.authz.test_authz.RedirectFollowingAccessDenied

# List of CA certificates used to verify the signatures of 
# Attribute Certificates retrieved
pip.caCertFilePathList=%(testConfigDir)s/ca/d573507a.0

#
# WS-Security Settings for call to Session Manager

# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
# binSecTokValType attribute must be set to 'X509' or 'X509v3' ValueType.  
# As an alternative, use signingCertChain - see below...

# PEM encode cert
pip.wssecurity.signingCertFilePath=%(testConfigDir)s/pki/wsse-server.crt

# PEM encoded private key file
pip.wssecurity.signingPriKeyFilePath=%(testConfigDir)s/pki/wsse-server.key

# Password protecting private key.  Leave blank if there is no password.
pip.wssecurity.signingPriKeyPwd=

# For signature verification.  Provide a space separated list of file paths
pip.wssecurity.caCertFilePathList=%(testConfigDir)s/ca/d573507a.0

# ValueType for the BinarySecurityToken added to the WSSE header
pip.wssecurity.reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
pip.wssecurity.addTimestamp=True
