################################################## 
# CertificateAuthority_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from CertificateAuthority_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class CertificateAuthorityServiceLocator:
    CertificateAuthority_address = "http://localhost:5001"
    def getCertificateAuthorityAddress(self):
        return CertificateAuthorityServiceLocator.CertificateAuthority_address
    def getCertificateAuthority(self, url=None, **kw):
        return CertificateAuthorityBindingSOAP(url or CertificateAuthorityServiceLocator.CertificateAuthority_address, **kw)

# Methods
class CertificateAuthorityBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x406a3f8c>
    def issueCert(self, x509CertReq):

        request = issueCertInputMsg()
        request._x509CertReq = x509CertReq

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="issueCert", **kw)
        # no output wsaction
        response = self.binding.Receive(issueCertOutputMsg.typecode)
        x509Cert = response._x509Cert
        return x509Cert

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x406ab2cc>
    def revokeCert(self, x509Cert):

        request = revokeCertInputMsg()
        request._x509Cert = x509Cert

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="revokeCert", **kw)
        # no output wsaction
        response = self.binding.Receive(revokeCertOutputMsg.typecode)
        return 

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x406ab7ec>
    def getCRL(self):

        request = getCRLInputMsg()

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getCRL", **kw)
        # no output wsaction
        response = self.binding.Receive(getCRLOutputMsg.typecode)
        crl = response._crl
        return crl

issueCertInputMsg = ns0.issueCert_Dec().pyclass

issueCertOutputMsg = ns0.issueCertResponse_Dec().pyclass

revokeCertInputMsg = ns0.revokeCert_Dec().pyclass

revokeCertOutputMsg = ns0.revokeCertResponse_Dec().pyclass

getCRLInputMsg = ns0.getCRL_Dec().pyclass

getCRLOutputMsg = ns0.getCRLResponse_Dec().pyclass
