##################################################
# SimpleCA_interface.py
#      Generated by ZSI.generate.wsdl2dispatch.DelAuthServiceModuleWriter
#
##################################################

from SimpleCA_messages import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class SimpleCAService(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<wsdl:definitions name=\"SimpleCA\" targetNamespace=\"urn:ZSI:SimpleCA\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:tns=\"urn:ZSI:SimpleCA\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">

  <wsdl:types>
    <xsd:schema>
      <xsd:element name=\"certReq\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name=\"x509CertReq\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"certReqResponse\">
        <xsd:complexType>
	  <xsd:sequence>
            <xsd:element name=\"x509Cert\" type=\"xsd:string\"/>
            <xsd:element name=\"errMsg\" type=\"xsd:string\"/>
	  </xsd:sequence>
	</xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>

  <wsdl:message name=\"certRequest\">
    <wsdl:part element=\"certReq\" name=\"parameters\"/>
  </wsdl:message>

  <wsdl:message name=\"certResponse\">
    <wsdl:part element=\"certReqResponse\" name=\"parameters\"/>
  </wsdl:message>

  <wsdl:portType name=\"SimpleCA\">
    <wsdl:operation name=\"reqCert\">
      <wsdl:input message=\"tns:certRequest\"/>
      <wsdl:output message=\"tns:certResponse\"/>
    </wsdl:operation>
  </wsdl:portType>

  <wsdl:binding name=\"SimpleCABinding\" type=\"tns:SimpleCA\">
    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>
    <wsdl:operation name=\"reqCert\">
      <soap:operation soapAction=\"reqCert\"/>
      <wsdl:input>
        <soap:body use=\"literal\"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=\"literal\"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>

  <wsdl:service name=\"SimpleCAService\">
    <wsdl:documentation>SimpleCA web service</wsdl:documentation>
    <wsdl:port binding=\"tns:SimpleCABinding\" name=\"SimpleCA\">
      <soap:address location=\"http://localhost:5001\"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>"""

    def __init__(self, post='', **kw):
        ServiceSOAPBinding.__init__(self, post)
        if kw.has_key('impl'):
            self.impl = kw['impl']
        self.auth_method_name = None
        if kw.has_key('auth_method_name'):
            self.auth_method_name = kw['auth_method_name']
    def authorize(self, auth_info, post, action):
        if self.auth_method_name and hasattr(self.impl, self.auth_method_name):
            return getattr(self.impl, self.auth_method_name)(auth_info, post, action)
        else:
            return 1

    def soap_reqCert(self, ps):
        self.request = ps.Parse(certRequest.typecode)
        parameters = self.request.x509CertReq

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.reqCert(parameters)

        result = certResponse()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            # Should have a tuple of 2 args
            result.x509Cert = parameters[0]
            result.errMsg = parameters[1]
        return result

    soapAction['reqCert'] = 'soap_reqCert'
    root[(certRequest.typecode.nspname,certRequest.typecode.pname)] = 'soap_reqCert'

