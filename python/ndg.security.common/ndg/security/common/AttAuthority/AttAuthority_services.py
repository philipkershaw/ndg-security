################################################## 
# AttAuthority_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from AttAuthority_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class AttAuthorityServiceLocator:
    AttAuthority_address = "http://localhost:5700"
    def getAttAuthorityAddress(self):
        return AttAuthorityServiceLocator.AttAuthority_address
    def getAttAuthority(self, url=None, **kw):
        return AttAuthorityBindingSOAP(url or AttAuthorityServiceLocator.AttAuthority_address, **kw)

# Methods
class AttAuthorityBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x8460c4c>
    def getAttCert(self, userId,userCert,userAttCert):

        request = getAttCertInputMsg()
        request._userId = userId
        request._userCert = userCert
        request._userAttCert = userAttCert

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getAttCert", **kw)
        # no output wsaction
        response = self.binding.Receive(getAttCertOutputMsg.typecode)
        attCert = response._attCert
        msg = response._msg
        return attCert,msg

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x8460f8c>
    def getHostInfo(self):

        request = getHostInfoInputMsg()

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getHostInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(getHostInfoOutputMsg.typecode)
        hostname = response._hostname
        aaURI = response._aaURI
        aaDN = response._aaDN
        loginURI = response._loginURI
        loginServerDN = response._loginServerDN
        loginRequestServerDN = response._loginRequestServerDN
        return hostname,aaURI,aaDN,loginURI,loginServerDN,loginRequestServerDN

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x8466bec>
    def getTrustedHostInfo(self, role):

        request = getTrustedHostInfoInputMsg()
        request._role = role

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getTrustedHostInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(getTrustedHostInfoOutputMsg.typecode)
        trustedHosts = response._trustedHosts
        return trustedHosts

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x8466d8c>
    def getAllHostsInfo(self):

        request = getAllHostsInfoInputMsg()

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getAllHostsInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(getAllHostsInfoOutputMsg.typecode)
        hosts = response._hosts
        return hosts

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x8466f0c>
    def getX509Cert(self):

        request = getX509CertInputMsg()

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getX509Cert", **kw)
        # no output wsaction
        response = self.binding.Receive(getX509CertOutputMsg.typecode)
        x509Cert = response._x509Cert
        return x509Cert

getAttCertInputMsg = ns0.getAttCert_Dec().pyclass

getAttCertOutputMsg = ns0.getAttCertResponse_Dec().pyclass

getHostInfoInputMsg = ns0.getHostInfo_Dec().pyclass

getHostInfoOutputMsg = ns0.getHostInfoResponse_Dec().pyclass

getTrustedHostInfoInputMsg = ns0.getTrustedHostInfo_Dec().pyclass

getTrustedHostInfoOutputMsg = ns0.getTrustedHostInfoResponse_Dec().pyclass

getAllHostsInfoInputMsg = ns0.getAllHostsInfo_Dec().pyclass

getAllHostsInfoOutputMsg = ns0.getAllHostsInfoResponse_Dec().pyclass

getX509CertInputMsg = ns0.getX509Cert_Dec().pyclass

getX509CertOutputMsg = ns0.getX509CertResponse_Dec().pyclass
