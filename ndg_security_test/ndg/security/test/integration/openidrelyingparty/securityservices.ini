#
# NERC DataGrid Security
#
# Paste configuration for authorization integration tests
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# Author: P J Kershaw
# date: 05/02/09
# Copyright: (C) 2009 Science and Technology Facilities Council
# license: BSD - see LICENSE file in top-level directory
# Contact: Philip.Kershaw@stfc.ac.uk
# Revision: $Id$

[DEFAULT]
portNum = 6443
hostname = localhost
scheme = http
baseURI = %(scheme)s://%(hostname)s:%(portNum)s
testConfigDir = %(here)s/../../config
beakerSessionKeyName = beaker.session.ndg.security.services

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = %(portNum)s

[pipeline:main]
pipeline = SessionMiddlewareFilter
		   OpenIDRelyingPartyApp

#______________________________________________________________________________
# Beaker Session Middleware (used by OpenID Provider Filter)
[filter:SessionMiddlewareFilter]
paste.filter_app_factory=beaker.middleware:SessionMiddleware
#beaker.session.key = sso
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
beaker.cache.data_dir = %(here)s/beaker/cache
beaker.session.data_dir = %(here)s/beaker/sessions

# Key name for keying into environ dictionary
environ_key = %(beakerSessionKeyName)s

[app:OpenIDRelyingPartyApp]
paste.app_factory = 
	ndg.security.server.wsgi.openid.relyingparty:OpenIDRelyingPartyMiddleware.app_factory

openid.relyingparty.baseURL = %(authkit.openid.baseurl)s
openid.relyingparty.certFilePath = %(testConfigDir)s/pki/localhost.crt
openid.relyingparty.priKeyFilePath = %(testConfigDir)s/pki/localhost.key
openid.relyingparty.priKeyPwd = 
openid.relyingparty.caCertDirPath = %(testConfigDir)s/ca
openid.relyingparty.providerWhitelistFilePath =
openid.relyingparty.signinInterfaceMiddlewareClass = ndg.security.server.wsgi.openid.relyingparty.signin_interface.buffet.BuffetSigninTemplate
openid.relyingparty.signinInterface.templatePackage = ndg.security.server.wsgi.openid.relyingparty.signin_interface.buffet.templates
openid.relyingparty.signinInterface.staticContentRootDir = %(here)s/openidrelyingparty/public
openid.relyingparty.signinInterface.baseURL = %(openid.relyingparty.baseURL)s
openid.relyingparty.signinInterface.leftLogo = %(openid.relyingparty.signinInterface.baseURL)s/layout/NERC_Logo.gif
openid.relyingparty.signinInterface.leftAlt = Natural Environment Research Council
openid.relyingparty.signinInterface.ndgLink = http://ndg.nerc.ac.uk/
openid.relyingparty.signinInterface.ndgImage = %(openid.relyingparty.signinInterface.baseURL)s/layout/ndg_logo_circle.gif
openid.relyingparty.signinInterface.disclaimer = This site is for test purposes only and is under active development.
openid.relyingparty.signinInterface.stfcLink = http://www.stfc.ac.uk/
openid.relyingparty.signinInterface.stfcImage = %(openid.relyingparty.signinInterface.baseURL)s/layout/stfc-circle-sm.gif
openid.relyingparty.signinInterface.helpIcon = %(openid.relyingparty.signinInterface.baseURL)s/layout/icons/help.png

cache_dir = %(here)s/data

# AuthKit Set-up
authkit.setup.method=openid, cookie

# This cookie name and secret MUST agree with the name used by the 
# Authentication Filter used to secure a given app
authkit.cookie.name=ndg.security.auth

authkit.cookie.secret=9wvZObs9anUEhSIAnJNoY2iJq59FfYZr
authkit.cookie.signoutpath = /logout

# Disable inclusion of client IP address from cookie signature due to 
# suspected problem with AuthKit setting it when a HTTP Proxy is in place
authkit.cookie.includeip = False

authkit.openid.path.signedin=/
authkit.openid.store.type=file
authkit.openid.store.config=%(here)s/openidrelyingparty/store
authkit.openid.session.key = authkit_openid
authkit.openid.session.secret = random string

# Key name for dereferencing beaker.session object held in environ
authkit.openid.session.middleware = %(beakerSessionKeyName)s

authkit.openid.baseurl = %(baseURI)s

# Template for signin
#authkit.openid.template.obj = 

# Handler for parsing OpenID and creating a session from it
#authkit.openid.urltouser = 


# Logging configuration
[loggers]
keys = root, ndg

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ndg]
level = DEBUG
handlers =
qualname = ndg

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

