# NERC Data Grid Project
#
# P J Kershaw 16/01/07
#
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# BSD - See LICENCE file for details

[setUp]
# ! SiteBMapConfig.xml trusted site A aaURI setting must agree with this 
# setting for test6GetMappedAttCert
uri = http://localhost:5000/AttributeAuthority

# With TCP Mon:
#uri = http://localhost:4999/AttributeAuthority

# Over SSL with mod_wsgi
#uri = https://localhost/ndg/AttributeAuthority

# For https connections only.  !Omit ssl* settings if using http!
# sslpeercertcn is the expected CommonName of peer cert.  Omit if it's the 
# same as peer hostname. 
sslPeerCertCN = 
sslCACertFilePathList = $NDGSEC_TEST_CONFIG_DIR/ca/d573507a.0

[test02GetTrustedHostInfo]
role = urn:siteA:security:authz:1.0:attr:postgrad

[test03GetTrustedHostInfoWithNoMatchingRoleFound]
# Set an alternative role to test no matching role found exception
role = blah
 
[test06GetAttCert]
# Setup for use by test08GetMappedAttCert test
attCertFilePath = $NDGSEC_AACLNT_UNITTEST_DIR/ac-clnt.xml

[test07GetAttCertWithUserIdSet]
userId = system
attCertFilePath = $NDGSEC_AACLNT_UNITTEST_DIR/ac-clnt-test6.xml

[test08GetMappedAttCert]
uri = http://localhost:5100/AttributeAuthority
userAttCertFilePath = $NDGSEC_AACLNT_UNITTEST_DIR/ac-clnt.xml
mappedAttCertFilePath = $NDGSEC_AACLNT_UNITTEST_DIR/mapped-ac.xml

[test09GetMappedAttCertStressTest]
uri = http://localhost:5100/AttributeAuthority
userAttCertFilePathList = $NDGSEC_AACLNT_UNITTEST_DIR/ac-clnt.xml

# SAML Interface use a separate test case class in the test module and is 
# included here
[test01SAMLAttributeQuery]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw
siteAttributeName = urn:siteA:security:authz:1.0:attr

[test02SAMLAttributeQueryInvalidIssuer]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw
siteAttributeName = urn:siteA:security:authz:1.0:attr

[test03SAMLAttributeQueryUnknownSubject]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/unknown
siteAttributeName = urn:siteA:security:authz:1.0:attr

[test04SAMLAttributeQueryInvalidAttrName]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw
siteAttributeName = invalid-attr

[test05AttributeQuerySOAPBindingInterface]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw

[test06AttributeQueryFromConfig]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw
attributeQuery.clockSkew = 0.
attributeQuery.issuerName = /O=Site A/CN=Authorisation Service
attributeQuery.queryAttributes.0 = urn:esg:first:name, FirstName, http://www.w3.org/2001/XMLSchema#string
attributeQuery.queryAttributes.roles = urn:siteA:security:authz:1.0:attr, , http://www.w3.org/2001/XMLSchema#string

[test07AttributeQuerySslSOAPBindingInterface]
uri = http://localhost:5000/AttributeAuthority/saml
subject = https://openid.localhost/philip.kershaw

attributeQuery.clockSkew = 0.
attributeQuery.issuerName = /O=Site A/CN=Authorisation Service
attributeQuery.queryAttributes.0 = urn:esg:email:address, EmailAddress, http://www.w3.org/2001/XMLSchema#string
attributeQuery.queryAttributes.roles = urn:siteA:security:authz:1.0:attr, , http://www.w3.org/2001/XMLSchema#string

# SSL Context Proxy settings
attributeQuery.sslCACertDir = $NDGSEC_TEST_CONFIG_DIR/ca
attributeQuery.sslCertFilePath = $NDGSEC_TEST_CONFIG_DIR/pki/test.crt
attributeQuery.sslPriKeyFilePath = $NDGSEC_TEST_CONFIG_DIR/pki/test.key
attributeQuery.sslValidDNs = /C=UK/ST=Oxfordshire/O=BADC/OU=Security/CN=localhost, /O=Site A/CN=Attribute Authority

[wsse]
# WS-Security settings for unit test AA clients
#
# OUTBOUND MESSAGE CONFIG

# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
signingCertFilePath=$NDGSEC_TEST_CONFIG_DIR/pki/wsse-clnt.crt

# PEM encoded private key file
signingPriKeyFilePath=$NDGSEC_TEST_CONFIG_DIR/pki/wsse-clnt.key

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  See __setReqBinSecTokValType method and binSecTokValType 
# class variable for options - it may be one of X509, X509v3, X509PKIPathv1 or 
# give full namespace to alternative - see 
# ZSI.wstools.Namespaces.OASIS.X509TOKEN
#
# binSecTokValType determines whether signingCert or signingCertChain 
# attributes will be used.
reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
applySignatureConfirmation=False

#
# INBOUND MESSAGE CONFIG

# Provide a space separated list of file paths
caCertFilePathList=$NDGSEC_TEST_CONFIG_DIR/ca/d573507a.0

