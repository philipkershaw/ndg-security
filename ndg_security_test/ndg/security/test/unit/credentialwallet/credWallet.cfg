# Configuration file for Credential Wallet Settings
# 
# NERC Data Grid Project
# 
# P J Kershaw 03/10/08
# 
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# BSD - See LICENCE file for details
[DEFAULT]
userId=ndg-user
userX509Cert=
userPriKey=
issuingX509Cert=

# CA certificates for Attribute Certificate signature validation
caCertFilePathList=$NDGSEC_TEST_CONFIG_DIR/ca/ndg-test-ca.crt

# CA certificates for SSL connection peer cert. validation
sslCACertFilePathList=$NDGSEC_TEST_CONFIG_DIR/ca/ndg-test-ca.crt

# See attAuthority unit tests to get this service running
attributeAuthorityURI=http://localhost:5000/AttributeAuthority
# Switch to alt port for testing with tcpmon
#attributeAuthorityURI=http://localhost:4900/AttributeAuthority

# Omit Credential Repository and use default NullCredentialRepository
#credentialRepository=

# Allow the Get Attribute Certificate call to try to get a mapped certificate
# from another organisation trusted by the target Attribute Authority
mapFromTrustedHosts=True
rtnExtAttCertList=True

# Refresh an Attribute Certificate, if an existing one in the wallet has only
# this length of time left before it expires
attCertRefreshElapse=7200

# Section in this file from which to retrieve WS-Security settings for 
# digital signature of SOAP messages to Attribute Authorities
#wssCfgSection=WS-Security

# ... or put the settings in the same section but prefix them with this prefix
wssCfgPrefix=wssecurity

# WS-Security
# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
# binSecTokValType attribute must be set to 'X509' or 'X509v3' ValueType.  
wssecurity.signingCertFilePath=$NDGSEC_TEST_CONFIG_DIR/pki/wsse-clnt.crt

# ... or provide file path to PEM encoded private key file
wssecurity.signingPriKeyFilePath=$NDGSEC_TEST_CONFIG_DIR/pki/wsse-clnt.key

# Password protecting private key.  Leave blank if there is no password.
wssecurity.signingPriKeyPwd=

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  See __setReqBinSecTokValType method and binSecTokValType 
# class variable for options - it may be one of X509, X509v3, X509PKIPathv1 or 
# give full namespace to alternative - see 
# ZSI.wstools.Namespaces.OASIS.X509TOKEN
#
# binSecTokValType determines whether signingCert or signingCertChain 
# attributes will be used.
wssecurity.reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
wssecurity.addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
wssecurity.applySignatureConfirmation=True

#
# INBOUND MESSAGE CONFIG

# Provide a space separated list of file paths
wssecurity.caCertFilePathList=$NDGSEC_TEST_CONFIG_DIR/ca/ndg-test-ca.crt 