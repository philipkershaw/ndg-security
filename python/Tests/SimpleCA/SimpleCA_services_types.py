################################################## 
# SimpleCA_services_types.py 
# generated by ZSI.generate.wsdl2python
##################################################


import ZSI
import ZSI.TCcompound
from ZSI.TC import ElementDeclaration,TypeDefinition
from ZSI.TC import _get_type_definition as GTD, _get_global_element_declaration as GED

##############################
# targetNamespace
# urn:ZSI:SimpleCA
##############################

class urn_ZSI_SimpleCA:
    targetNamespace = "urn:ZSI:SimpleCA"

    class certReq(ZSI.TCcompound.ComplexType, ElementDeclaration):
        schema = "urn:ZSI:SimpleCA"
        literal = "certReq"
        def __init__(self, **kw):
            ns = urn_ZSI_SimpleCA.certReq.schema
            TClist = [ZSI.TC.String(pname="x509CertReq", aname="x509CertReq", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("urn:ZSI:SimpleCA","certReq")
            kw["aname"] = "certReq"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self.x509CertReq = None
                    return
            Holder.__name__ = "certReq_Holder"
            self.pyclass = Holder

    class certReqResponse(ZSI.TCcompound.ComplexType, ElementDeclaration):
        schema = "urn:ZSI:SimpleCA"
        literal = "certReqResponse"
        def __init__(self, **kw):
            ns = urn_ZSI_SimpleCA.certReqResponse.schema
            TClist = [ZSI.TC.String(pname="x509Cert", aname="x509Cert", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded")), ZSI.TC.String(pname="errMsg", aname="errMsg", minOccurs=1, maxOccurs=1, nillable=False, typed=False, encoded=kw.get("encoded"))]
            kw["pname"] = ("urn:ZSI:SimpleCA","certReqResponse")
            kw["aname"] = "certReqResponse"
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self, None, TClist, inorder=0, **kw)
            class Holder:
                typecode = self
                def __init__(self):
                    # pyclass
                    self.x509Cert = None
                    self.errMsg = None
                    return
            Holder.__name__ = "certReqResponse_Holder"
            self.pyclass = Holder

# end class urn_ZSI_SimpleCA (tns: urn:ZSI:SimpleCA)
