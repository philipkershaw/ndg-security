#
# PasteDeploy ini file for Attribute Authority Unit tests Site A Server
# 
# NERC Data Grid Project
# 
# P J Kershaw 12/09/08
# 
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# This software may be distributed under the terms of the Q Public License,
# version 1.0 or later.

[DEFAULT]
# WS-Security settings in THIS file
wsseCfgFilePath = %(here)s/site-b.ini
wsseCfgFileSection = WS-Security

# Attribute Authority settings
# 'name' setting MUST agree with map config file 'thisHost' name attribute
attributeAuthority.name: Site B

# Lifetime is measured in seconds
attributeAuthority.attCertLifetime: 28800 

# Allow an offset for clock skew between servers running 
# security services. NB, measured in seconds - use a minus sign for time in the
# past
attributeAuthority.attCertNotBeforeOff: 0

# All Attribute Certificates issued are recorded in this dir
attributeAuthority.attCertDir: %(here)s/attributeCertificateLog

# Files in attCertDir are stored using a rotating file handler
# attCertFileLogCnt sets the max number of files created before the first is 
# overwritten
attributeAuthority.attCertFileName: ac.xml
attributeAuthority.attCertFileLogCnt: 16
attributeAuthority.dnSeparator:/

# Location of role mapping file
attributeAuthority.mapConfigFile: %(here)s/siteBMapConfig.xml

# Settings for custom AttributeInterface derived class to get user roles for given 
# user ID
attributeAuthority.attributeInterface.modFilePath: %(here)s
attributeAuthority.attributeInterface.modName: siteBUserRoles
attributeAuthority.attributeInterface.className: TestUserRoles

# Config for XML signature of Attribute Certificate
attributeAuthority.signingPriKeyFilePath: %(here)s/siteB-aa.key
attributeAuthority.signingCertFilePath: %(here)s/siteB-aa.crt
attributeAuthority.caCertFilePathList: $NDGSEC_UNITTEST_CONFIG_DIR/ca/ndg-test-ca.crt

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5100

[app:mainApp]
paste.app_factory = ndg.security.test.config.attributeauthority.siteb.siteBServerApp:app_factory

# Chain of SOAP Middleware filters
[pipeline:main]
pipeline = wsseSignatureVerificationFilter AttributeAuthorityFilter wsseSignatureFilter mainApp


[filter:AttributeAuthorityFilter]
paste.filter_app_factory = ndg.security.server.wsgi.soap:SOAPBindingMiddleware
ServiceSOAPBindingClass = ndg.security.server.zsi.attributeauthority.AttributeAuthorityWS
ServiceSOAPBindingPropPrefix = AttributeAuthority
AttributeAuthority.propPrefix = attributeAuthority
AttributeAuthority.propFilePath = %(here)s/site-b.ini
AttributeAuthority.wsseSignatureVerificationFilterID = wsseSignatureVerificationFilter01
referencedFilters = wsseSignatureVerificationFilter01
path = /AttributeAuthority
enableWSDLQuery = True
charset = utf-8

[filter:wsseSignatureVerificationFilter]
paste.filter_app_factory = ndg.security.server.wsgi.wssecurity:SignatureVerificationFilter
filterID = wsseSignatureVerificationFilter01

[filter:wsseSignatureFilter]
paste.filter_app_factory = ndg.security.server.wsgi.wssecurity:ApplySignatureFilter

# Reference the verification filter in order to be able to apply signature
# confirmation - not needed if applySignatureConfirmation is set to False - see
# WS-Security section below...
#referencedFilters = wsseSignatureVerificationFilter01
#wsseSignatureVerificationFilterID = wsseSignatureVerificationFilter01

# Last filter in chain SOAP handlers writes the response
writeResponse = True


[WS-Security]
#
# OUTBOUND MESSAGE CONFIG

# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
signingCertFilePath=%(here)s/siteB-aa.crt

# PEM encoded private key file
signingPriKeyFilePath=%(here)s/siteB-aa.key

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  See __setReqBinSecTokValType method and binSecTokValType 
# class variable for options - it may be one of X509, X509v3, X509PKIPathv1 or 
# give full namespace to alternative - see 
# ZSI.wstools.Namespaces.OASIS.X509TOKEN
#
# binSecTokValType determines whether signingCert or signingCertChain 
# attributes will be used.
reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
applySignatureConfirmation=False

#
# INBOUND MESSAGE CONFIG

# Provide a space separated list of file paths
caCertFilePathList=$NDGSEC_UNITTEST_CONFIG_DIR/ca/ndg-test-ca.crt

# Logging configuration
[loggers]
keys = root, ndg

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_ndg]
level = DEBUG
handlers =
qualname = ndg

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
