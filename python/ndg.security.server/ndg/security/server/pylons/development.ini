#
# container - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

# Layout
#server = http://localhost:8200
server = https://gabriel.badc.rl.ac.uk
LeftLogo = %(server)s/layout/NERC_Logo.gif
LeftAlt = Natural Environment Research Council
ndgLink = http://ndg.nerc.ac.uk/
ndgImage = %(server)s/layout/ndg_logo_circle.gif
disclaimer = This site is for test purposes only and is under active development.
stfcLink = http://ceda.stfc.ac.uk/
stfcImage = %(server)s/layout/stfc-circle-sm.gif
helpIcon = %(server)s/layout/icons/help.png

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 8200

[app:main]
#use = egg:ndg_security_server
use = egg:container
full_stack = true
cache_dir = %(here)s/data
beaker.session.key = container
beaker.session.secret = somesecret

authkit.setup.method = form, cookie
authkit.form.authenticate.user.data = visitor:open_sesame
authkit.cookie.secret = secret string

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# OpenID Provider
#openid.provider.path.openidserver=/openidserver
#openid.provider.path.login=/login
#openid.provider.path.loginsubmit=/loginsubmit
#openid.provider.path.id=/id
#openid.provider.path.yadis=/yadis
#openid.provider.path.serveryadis=/serveryadis
#openid.provider.path.allow=/allow
#openid.provider.path.decide=/decide
#openid.provider.path.mainpage=/

openid.provider.path.openidserver=/openid/openidserver
openid.provider.path.login=/openid/login
openid.provider.path.loginsubmit=/openid/loginsubmit
openid.provider.path.id=/openid/id
openid.provider.path.yadis=/openid/yadis
openid.provider.path.serveryadis=/openid/serveryadis
openid.provider.path.allow=/openid/allow
openid.provider.path.decide=/openid/decide
openid.provider.path.mainpage=/openid
openid.provider.session_middleware=beaker.session 
#openid.provider.base_url=http://localhost:8200
openid.provider.base_url=https://gabriel.badc.rl.ac.uk
#openid.provider.consumer_store_dirpath=./
openid.provider.charset=None
openid.provider.trace=False
openid.provider.renderingClass=ndg.security.server.pylons.container.lib.openid.provider_util.OpenIDProviderKidRendering
openid.provider.sregResponseHandler=ndg.security.server.pylons.container.lib.openid.provider_util:esgSRegResponseHandler
openid.provider.axResponseHandler=ndg.security.server.pylons.container.lib.openid.provider_util:esgAXResponseHandler

# Basic authentication for testing/admin - comma delimited list of 
# <username>:<password> pairs
openid.provider.usercreds=pjk:test, luca:esgndgtest

# Logging configuration
[loggers]
keys = root, container, ndg

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_container]
level = DEBUG
handlers =
qualname = container

[logger_ndg]
level = DEBUG
handlers =
qualname = ndg

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s.%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

