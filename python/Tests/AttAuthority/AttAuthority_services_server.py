##################################################
# AttAuthority_services_server.py
#      Generated by ZSI.generate.wsdl2dispatch.DelAuthServiceModuleWriter
#
##################################################

from AttAuthority_services import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class AttAuthorityService(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<wsdl:definitions name=\"AttAuthority\" targetNamespace=\"urn:ndg:security\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:tns=\"urn:ndg:security\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:wsu=\"http://schemas.xmlsoap.org/ws/2002/07/utility\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">

  <wsdl:types>
    <xsd:schema>
      <xsd:element name=\"getAttCert\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name=\"userCert\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"getAttCertResponse\">
        <xsd:complexType>
	  <xsd:sequence>
	    <xsd:element name=\"attCert\" type=\"xsd:string\"/>
	  </xsd:sequence>
	</xsd:complexType>
      </xsd:element>

      <xsd:element name=\"getHostInfo\">
        <xsd:complexType/>
      </xsd:element>

      <xsd:element name=\"getHostInfoResponse\">
        <xsd:complexType/>
      </xsd:element>

      <xsd:element name=\"getTrustedHostInfo\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name=\"role\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"getTrustedHostInfoResponse\">
        <xsd:complexType>
	  <xsd:sequence>
	    <xsd:element name=\"trustedHosts\" type=\"xsd:string\"/>
	  </xsd:sequence>
	</xsd:complexType>
      </xsd:element>

      <xsd:element name=\"getPubKey\">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name=\"getPubKeyResponse\">
        <xsd:complexType>
	  <xsd:sequence>
	    <xsd:element name=\"x509Cert\" type=\"xsd:string\"/>
	  </xsd:sequence>
	</xsd:complexType>
      </xsd:element>

    </xsd:schema>
  </wsdl:types>
 
  <message name=\"getAttCertInputMsg\">
    <part element=\"tns:getAttCert\" name=\"parameters\"/>
  </message>

  <message name=\"getAttCertOutputMsg\">
    <part element=\"tns:getAttCertResponse\" name=\"parameters\"/>
  </message>
  
  <message name=\"getHostInfoInputMsg\">
    <part element=\"tns:getHostInfo\" name=\"parameters\"/>
  </message>

  <message name=\"getHostInfoOutputMsg\">
    <part element=\"tns:getHostInfoResponse\" name=\"parameters\"/>
  </message>

  <message name=\"getTrustedHostInfoInputMsg\">
    <part element=\"tns:getTrustedHostInfo\" name=\"parameters\"/>
  </message>

  <message name=\"getTrustedHostInfoOutputMsg\">
    <part element=\"tns:getTrustedHostInfoResponse\" name=\"parameters\"/>
  </message>

  <message name=\"getPubKeyInputMsg\">
    <part element=\"tns:getPubKey\" name=\"parameters\"/>
  </message>

  <message name=\"getPubKeyOutputMsg\">
    <part element=\"tns:getPubKeyResponse\" name=\"parameters\"/>
  </message>

  <wsdl:portType name=\"AttAuthority\">
    <wsdl:operation name=\"getAttCert\">
      <wsdl:input message=\"tns:getAttCertInputMsg\"/>
      <wsdl:output message=\"tns:getAttCertOutputMsg\"/>
    </wsdl:operation>

    <operation name=\"getHostInfo\">
      <wsdl:input message=\"tns:getHostInfoInputMsg\"/>
      <output message=\"tns:getHostInfoOutputMsg\"/>
    </operation>

    <operation name=\"getTrustedHostInfo\">
      <wsdl:input message=\"tns:getTrustedHostInfoInputMsg\"/>
      <output message=\"tns:getTrustedHostInfoOutputMsg\"/>
    </operation>

    <operation name=\"getPubKey\">
      <wsdl:input message=\"tns:getPubKeyInputMsg\"/>
      <output message=\"tns:getPubKeyOutputMsg\"/>
    </operation>
  </wsdl:portType>

  <wsdl:binding name=\"AttAuthorityBinding\" type=\"tns:AttAuthority\">
    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>
     
    <wsdl:operation name=\"getAttCert\">
      <soap:operation soapAction=\"getAttCert\"/>
      <wsdl:input>
        <soap:body use=\"literal\"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=\"literal\"/>
      </wsdl:output>
    </wsdl:operation>

    <operation name=\"getHostInfo\">
      <soap:operation soapAction=\"getHostInfo\"/>
      <wsdl:input>
        <soap:body use=\"literal\"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=\"literal\"/>
      </wsdl:output> 
    </operation>

    <operation name=\"getTrustedHostInfo\">
      <soap:operation soapAction=\"getTrustedHostInfo\"/>
      <wsdl:input>
        <soap:body use=\"literal\"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=\"literal\"/>
      </wsdl:output> 
    </operation>

    <operation name=\"getPubKey\">
      <soap:operation soapAction=\"getPubKey\"/>
      <wsdl:input>
        <soap:body use=\"literal\"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use=\"literal\"/>
      </wsdl:output> 
    </operation>    
  
  </wsdl:binding>

  <wsdl:service name=\"AttAuthorityService\">
    <wsdl:documentation>NERC Data Grid Attribute Authority web service</wsdl:documentation>
    <wsdl:port binding=\"tns:AttAuthorityBinding\" name=\"SimpleCA\">
      <soap:address location=\"http://localhost:5700\"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>"""

    def __init__(self, post='', **kw):
        ServiceSOAPBinding.__init__(self, post)
        if kw.has_key('impl'):
            self.impl = kw['impl']
        self.auth_method_name = None
        if kw.has_key('auth_method_name'):
            self.auth_method_name = kw['auth_method_name']
    def authorize(self, auth_info, post, action):
        if self.auth_method_name and hasattr(self.impl, self.auth_method_name):
            return getattr(self.impl, self.auth_method_name)(auth_info, post, action)
        else:
            return 1

    def soap_getAttCert(self, ps):
        self.request = ps.Parse(getAttCertInputMsg.typecode)
        parameters = self.request._userCert

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.getAttCert(parameters)

        result = getAttCertOutputMsg()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            result._attCert = parameters
        return self.request, result

    soapAction['getAttCert'] = 'soap_getAttCert'
    root[(getAttCertInputMsg.typecode.nspname,getAttCertInputMsg.typecode.pname)] = 'soap_getAttCert'

    def soap_getHostInfo(self, ps):
        self.request = ps.Parse(getHostInfoInputMsg.typecode)

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.getHostInfo()

        result = getHostInfoOutputMsg()
        return result

    soapAction['getHostInfo'] = 'soap_getHostInfo'
    root[(getHostInfoInputMsg.typecode.nspname,getHostInfoInputMsg.typecode.pname)] = 'soap_getHostInfo'

    def soap_getTrustedHostInfo(self, ps):
        self.request = ps.Parse(getTrustedHostInfoInputMsg.typecode)
        parameters = self.request._role

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.getTrustedHostInfo(parameters)

        result = getTrustedHostInfoOutputMsg()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            result._trustedHosts = parameters
        return result

    soapAction['getTrustedHostInfo'] = 'soap_getTrustedHostInfo'
    root[(getTrustedHostInfoInputMsg.typecode.nspname,getTrustedHostInfoInputMsg.typecode.pname)] = 'soap_getTrustedHostInfo'

    def soap_getPubKey(self, ps):
        self.request = ps.Parse(getPubKeyInputMsg.typecode)

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.getPubKey()

        result = getPubKeyOutputMsg()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            result._x509Cert = parameters
        return result

    soapAction['getPubKey'] = 'soap_getPubKey'
    root[(getPubKeyInputMsg.typecode.nspname,getPubKeyInputMsg.typecode.pname)] = 'soap_getPubKey'

