##################################################
# EchoServer_interface.py
#      Generated by ZSI.generate.wsdl2dispatch.DelAuthServiceModuleWriter
#
##################################################

from EchoServer_messages import *
from ZSI.ServiceContainer import ServiceSOAPBinding

class EchoServer(ServiceSOAPBinding):
    soapAction = {}
    root = {}
    _wsdl = """<?xml version=\"1.0\" ?>
<definitions targetNamespace=\"urn:ZSI:examples\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:tns=\"urn:ZSI:examples\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">
  <types>
  <xsd:schema elementFormDefault=\"qualified\" targetNamespace=\"urn:ZSI:examples\">
      <xsd:element name=\"Echo\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EchoIn\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"EchoResponse\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EchoResult\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"EchoEncr\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EchoIn\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name=\"EchoEncrResponse\">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs=\"1\" minOccurs=\"0\" name=\"EchoResult\" type=\"xsd:string\"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
  </xsd:schema>
  </types>

  <message name=\"EchoRequest\">
    <part element=\"tns:Echo\" name=\"parameters\"/>
  </message>
  <message name=\"EchoResponse\">
    <part element=\"tns:EchoResponse\" name=\"parameters\"/>
  </message>
  <message name=\"EchoEncrRequest\">
    <part element=\"tns:EchoEncr\" name=\"parameters\"/>
  </message>
  <message name=\"EchoEncrResponse\">
    <part element=\"tns:EchoEncrResponse\" name=\"parameters\"/>
  </message>

  <portType name=\"EchoServer\">
    <operation name=\"Echo\">
      <input message=\"tns:EchoRequest\"/>
      <output message=\"tns:EchoResponse\"/>
    </operation>
    <operation name=\"EchoEncr\">
      <input message=\"tns:EchoEncrRequest\"/>
      <output message=\"tns:EchoEncrResponse\"/>
    </operation>
  </portType>

  <binding name=\"EchoServer\" type=\"tns:EchoServer\">
    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>
    <operation name=\"Echo\">
      <soap:operation soapAction=\"Echo\"/>
	<input>
   	  <soap:body use=\"literal\"/> 
	</input>
	<output>
	  <soap:body use=\"literal\"/> 
	</output>
    </operation>
    <operation name=\"EchoEncr\">
      <soap:operation soapAction=\"EchoEncr\"/>
	<input>
   	  <soap:body use=\"literal\"/> 
	</input>
	<output>
	  <soap:body use=\"literal\"/> 
	</output>
    </operation>
  </binding>

  <service name=\"EchoServer\">
    <port binding=\"tns:EchoServer\" name=\"EchoServer\">
      <soap:address location=\"http://localhost:7100\"/>
    </port>
  </service>

</definitions>"""

    def __init__(self, post='', **kw):
        ServiceSOAPBinding.__init__(self, post)
        if kw.has_key('impl'):
            self.impl = kw['impl']
        self.auth_method_name = None
        if kw.has_key('auth_method_name'):
            self.auth_method_name = kw['auth_method_name']
    def authorize(self, auth_info, post, action):
        if self.auth_method_name and hasattr(self.impl, self.auth_method_name):
            return getattr(self.impl, self.auth_method_name)(auth_info, post, action)
        else:
            return 1

    def soap_Echo(self, ps):
        #import pdb;pdb.set_trace()
        self.request = ps.Parse(EchoRequest.typecode)
        parameters = self.request.EchoIn

        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.Echo(parameters)

        result = EchoResponse()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            result.EchoResult = parameters
        return result

    soapAction['Echo'] = 'soap_Echo'
    root[(EchoRequest.typecode.nspname,EchoRequest.typecode.pname)] = 'soap_Echo'

    def soap_EchoEncr(self, ps):
        self.request = ps.Parse(EchoEncrRequest.typecode)
        parameters = self.request.EchoIn
        #import pdb;pdb.set_trace()
        # If we have an implementation object use it
        if hasattr(self,'impl'):
            parameters = self.impl.EchoEncr(parameters)

        result = EchoEncrResponse()
        # If we have an implementation object, copy the result 
        if hasattr(self,'impl'):
            result.EchoResult = parameters
        return result

    soapAction['EchoEncr'] = 'soap_EchoEncr'
    root[(EchoEncrRequest.typecode.nspname,EchoEncrRequest.typecode.pname)] = 'soap_EchoEncr'

