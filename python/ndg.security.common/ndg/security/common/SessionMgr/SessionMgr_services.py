################################################## 
# SessionMgr_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from SessionMgr_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class SessionMgrServiceLocator:
    SessionMgr_address = "http://localhost:5000"
    def getSessionMgrAddress(self):
        return SessionMgrServiceLocator.SessionMgr_address
    def getSessionMgr(self, url=None, **kw):
        return SessionMgrBindingSOAP(url or SessionMgrServiceLocator.SessionMgr_address, **kw)

# Methods
class SessionMgrBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x84652ac>
    def getSessionStatus(self, userDN,sessID):

        request = getSessionStatusInputMsg()
        request._userDN = userDN
        request._sessID = sessID

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getSessionStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(getSessionStatusOutputMsg.typecode)
        isAlive = response._isAlive
        return isAlive

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x84655ac>
    def connect(self, username,passphrase,createServerSess):

        request = connectInputMsg()
        request._username = username
        request._passphrase = passphrase
        request._createServerSess = createServerSess

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="connect", **kw)
        # no output wsaction
        response = self.binding.Receive(connectOutputMsg.typecode)
        userCert = response._userCert
        userPriKey = response._userPriKey
        issuingCert = response._issuingCert
        sessID = response._sessID
        return userCert,userPriKey,issuingCert,sessID

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x846d2cc>
    def disconnect(self, userCert,sessID):

        request = disconnectInputMsg()
        request._userCert = userCert
        request._sessID = sessID

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="disconnect", **kw)
        # no output wsaction
        response = self.binding.Receive(disconnectOutputMsg.typecode)
        return 

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x846d46c>
    def getAttCert(self, userCert,sessID,attAuthorityURI,attAuthorityCert,reqRole,mapFromTrustedHosts,rtnExtAttCertList,extAttCert,extTrustedHost):

        request = getAttCertInputMsg()
        request._userCert = userCert
        request._sessID = sessID
        request._attAuthorityURI = attAuthorityURI
        request._attAuthorityCert = attAuthorityCert
        request._reqRole = reqRole
        request._mapFromTrustedHosts = mapFromTrustedHosts
        request._rtnExtAttCertList = rtnExtAttCertList
        request._extAttCert = extAttCert
        request._extTrustedHost = extTrustedHost

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getAttCert", **kw)
        # no output wsaction
        response = self.binding.Receive(getAttCertOutputMsg.typecode)
        attCert = response._attCert
        msg = response._msg
        extAttCertOut = response._extAttCertOut
        return attCert,msg,extAttCertOut

    # op: <ZSI.wstools.WSDLTools.Message instance at 0x846d5ec>
    def getX509Cert(self):

        request = getX509CertInputMsg()

        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getX509Cert", **kw)
        # no output wsaction
        response = self.binding.Receive(getX509CertOutputMsg.typecode)
        x509Cert = response._x509Cert
        return x509Cert

getSessionStatusInputMsg = ns0.getSessionStatus_Dec().pyclass

getSessionStatusOutputMsg = ns0.getSessionStatusResponse_Dec().pyclass

connectInputMsg = ns0.connect_Dec().pyclass

connectOutputMsg = ns0.connectResponse_Dec().pyclass

disconnectInputMsg = ns0.disconnect_Dec().pyclass

disconnectOutputMsg = ns0.disconnectResponse_Dec().pyclass

getAttCertInputMsg = ns0.getAttCert_Dec().pyclass

getAttCertOutputMsg = ns0.getAttCertResponse_Dec().pyclass

getX509CertInputMsg = ns0.getX509Cert_Dec().pyclass

getX509CertOutputMsg = ns0.getX509CertResponse_Dec().pyclass
