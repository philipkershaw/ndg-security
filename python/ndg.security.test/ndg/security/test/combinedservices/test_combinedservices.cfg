# NERC Data Grid Project
#
# P J Kershaw 20/11/08
#
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# This software may be distributed under the terms of the Q Public License,
# version 1.0 or later.
#
# $Id:$
[setUp]
logLevel = ERROR
uri = http://localhost:8000/SessionManager
# alternate port for testing with tcpmon
#uri = http://localhost:7999/SessionManager

# For https connections only.  !Omit ssl* settings if using http!
# sslpeercertcn is the expected CommonName of peer cert.  Omit if it's the 
# same as peer hostname. 
#sslPeerCertCN = junk

# For https only - List of CA certificates to enable this client to verify 
# the server's SSL X.509 certificate
sslCACertFilePathList = $NDGSEC_UNITTEST_CONFIG_DIR/ca/ndg-test-ca.crt

[test01Connect]
username = testuser
passphrase = testpassword

[test03ConnectNoCreateServerSess]         
username = testuser
passphrase = testpassword

[test06GetAttCertWithSessID]
aaURI = http://localhost:8000/AttributeAuthority
acOutFilePath = $NDGSEC_COMBINED_SRVS_UNITTEST_DIR/ac-out.xml

[test07GetAttCertWithUserX509Cert]
aaURI = http://localhost:8000/AttributeAuthority

[test09WSGILocalSessionManagerInstanceConnect]
url = http://localhost:8000/test_localSessionManagerConnect
username = testuser
passphrase = testpassword

[test10WSGILocalSessionManagerInstanceGetSessionStatus]
url = http://localhost:8000/test_localSessionManagerGetSessionStatus
username = testuser
passphrase = testpassword

[test11WSGILocalSessionManagerInstanceDisconnect]
url = http://localhost:8000/test_localSessionManagerDisconnect
username = testuser
passphrase = testpassword

[test12WSGILocalSessionManagerInstanceGetAttCert]
url = http://localhost:8000/test_localSessionManagerGetAttCert
username = testuser
passphrase = testpassword

[test13WSGILocalAttributeAuthorityInstanceGetHostInfo]
url = http://localhost:8000/test_localAttributeAuthorityGetHostInfo

[test14WSGILocalAttributeAuthorityInstanceGetTrustedHostInfo]
url = http://localhost:8000/test_localAttributeAuthorityGetTrustedHostInfo
role = postgrad

[test15WSGILocalAttributeAuthorityInstanceGetAllHostsInfo]
url = http://localhost:8000/test_localAttributeAuthorityGetAllHostsInfo

[test16WSGILocalAttributeAuthorityInstanceGetAttCert]
url = http://localhost:8000/test_localAttributeAuthorityGetAttCert
username = testuser
passphrase = testpassword

[wsse]
# WS-Security settings for unit test AA clients
#
# OUTBOUND MESSAGE CONFIG

# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
signingCertFilePath=$NDGSEC_UNITTEST_CONFIG_DIR/pki/test.crt

# PEM encoded private key file
signingPriKeyFilePath=$NDGSEC_UNITTEST_CONFIG_DIR/pki/test.key

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  See __setReqBinSecTokValType method and binSecTokValType 
# class variable for options - it may be one of X509, X509v3, X509PKIPathv1 or 
# give full namespace to alternative - see 
# ZSI.wstools.Namespaces.OASIS.X509TOKEN
#
# binSecTokValType determines whether signingCert or signingCertChain 
# attributes will be used.
reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
applySignatureConfirmation=False

#
# INBOUND MESSAGE CONFIG

# Provide a space separated list of file paths
caCertFilePathList=$NDGSEC_UNITTEST_CONFIG_DIR/ca/ndg-test-ca.crt
