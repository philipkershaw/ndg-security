# Configuration file for PEP / PDP controlling access to MOLES/
# CSML secured with MOLES schema access constraints
# 
# NERC Data Grid Project
# 
# P J Kershaw 09/04/08
# 
# Copyright (C) 2009 Science and Technology Facilities Council
# 
# This software may be distributed under the terms of the Q Public License,
# version 1.0 or later.
#
[DEFAULT]

#
# Policy Enforcement Point calls a Policy Decision Point interface:

# File path to Python module containing the PDP class - leave blank if the 
# module is in PYTHONPATH env var
pdpModFilePath: 

# Name of PDP Python module
pdpModName: ndg.security.common.authz.pdp.browse

# Name of PDP class used
pdpClassName: BrowsePDP

# File Path to configuration file used by PDP class (environment variables
# can be used in this path e.g. $PDP_CONFIG_DIR/pdp.cfg.  Omit this parameter
# to make the PEP read the PDP settings from THIS config file
#pdpCfgFilePath:

# Read PDP params from THIS section
pdpCfgSection: NDG_SECURITY.gatekeeper

#
# Settings for Policy Decision Point called by the PEP 

# Address of Attribute Authority for Data Provider
#aaURI: http://aa.ceda.rl.ac.uk
aaURI: http://localhost:5000/AttributeAuthority

# Verify peer cert for SSL connections to Session Manager
sslCACertFilePathList: ./ndg-test-ca.crt

# Set to file object to dump SOAP message output for debugging
tracefile: sys.stderr

# CA certificates used to verify the signature of user Attribute Certificates
# - space delimited list but note that currently only the CA of this site
# is needed because only mapped Attribute Certificates may be accepted.
acCACertFilePathList: ./ndg-test-ca.crt

# X.509 Distinguished Name for Attribute Certificate issuer - should match with
# the issuer element of the users Attribute Certificate submitted in order to 
# gain access
acIssuer: /CN=AttributeAuthority/O=NDG Security Test/OU=Site A
#acIssuer: /CN=AttributeAuthority/O=NDG/OU=BADC

# WS-Security signature handler - set a config file with 'wssCfgFilePath'
# or omit and put the relevant content directly in here under the section name
# specified by 'wssCfgSection' below
#wssCfgFilePath: wssecurity.cfg

# Config file section for WS-Security settings - Nb. the gatekeeper shares the
# same settings as the Single Sign On Service.
wssCfgSection: wssecurity

[wssecurity]

# Settings for signature of an outbound message ...

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
# binSecTokValType attribute must be set to 'X509' or 'X509v3' ValueType.  
# As an alternative, use 'signingCertChain' parameter

# file path PEM encoded cert 
signingCertFilePath=./clnt.crt

# file path to PEM encoded private key file
signingPriKeyFilePath=./clnt.key

# Password protecting private key.  Leave blank if there is no password.
signingPriKeyPwd=

# Pass a list of certificates ',' separated PEM encoded certs constituting a 
# chain of trust from the certificate used to verifying the signature backward 
# to the CA cert.  The CA cert need not be included.  To use this option, 
# reqBinSecTokValType must be set to the X509PKIPathv1
signingCertChain=

# Provide a space separated list of file paths.  CA Certs should be included 
# for all the sites this installation trusts
caCertFilePathList=./ndg-test-ca.crt

# Set the ValueType for the BinarySecurityToken added to the WSSE header for a
# signed message.  
reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
addTimestamp=True

# For WSSE 1.1 - service returns signature confirmation containing signature 
# value sent by client
applySignatureConfirmation=False
