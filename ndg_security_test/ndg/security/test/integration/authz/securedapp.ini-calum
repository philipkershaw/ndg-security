#
# NDG Security AuthZ WSGI Testing environment configuration
#
# NERC DataGrid
#
# Author: P J Kershaw
#
# Copyright: STFC 2009
#
# Licence: BSD
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
testConfigDir = %(here)s/../../config

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 7080

[pipeline:main]
pipeline = AuthenticationFilter AuthorizationFilter AuthZTestApp

[app:AuthZTestApp]
paste.app_factory = ndg.security.test.integration.authz.securedapp:AuthZTestMiddleware.app_factory

[filter:AuthenticationFilter]
paste.filter_app_factory = ndg.security.server.wsgi.authn:AuthenticationMiddleware
prefix = authN.

# Set redirect for OpenID Relying Party in the Security Services app instance
authN.redirectURI = http://localhost:7443/verify

# Beaker Session set-up
beaker.session.key = ndg.security.session
beaker.session.secret = rBIvKXLa+REYB8pM/8pdPoorVpKQuaOW
beaker.cache.data_dir = %(here)s/authn/beaker/cache
beaker.session.data_dir = %(here)s/authn/beaker/sessions

# AuthKit Set-up
authkit.setup.method=cookie

# This cookie name and secret MUST agree with the name used by the security web
# services app
authkit.cookie.name=ndg.security.auth
authkit.cookie.secret=9wvZObs9anUEhSIAnJNoY2iJq59FfYZr
authkit.cookie.signoutpath = /logout

# Disable inclusion of client IP address from cookie signature due to 
# suspected problem with AuthKit setting it when a HTTP Proxy is in place
authkit.cookie.includeip = False

[filter:AuthorizationFilter]
paste.filter_app_factory=ndg.security.server.wsgi.authz:AuthorizationMiddleware.filter_app_factory
prefix = authz.
policy.filePath = %(here)s/policy.xml

# Settings for Policy Information Point used by the Policy Decision Point to
# retrieve subject attributes from the Attribute Authority associated with the
# resource to be accessed
pip.sslCACertFilePathList=

# List of CA certificates used to verify the signatures of 
# Attribute Certificates retrieved
pip.caCertFilePathList=%(testConfigDir)s/ca/badc-ca.crt

#
# WS-Security Settings for call to Session Manager / Attribute Authority to
# retrieve user attributes

# Signature of an outbound message

# Certificate associated with private key used to sign a message.  The sign 
# method will add this to the BinarySecurityToken element of the WSSE header.  
# binSecTokValType attribute must be set to 'X509' or 'X509v3' ValueType.  
# As an alternative, use signingCertChain - see below...

# PEM encode cert
#pip.wssecurity.signingCertFilePath=%(testConfigDir)s/pki/wsse-server.crt
pip.wssecurity.signingCertFilePath=%(testConfigDir)s/pki/wsse-oai-editor.crt

# PEM encoded private key file
#pip.wssecurity.signingPriKeyFilePath=%(testConfigDir)s/pki/wsse-server.key
pip.wssecurity.signingPriKeyFilePath=%(testConfigDir)s/pki/wsse-oai-editor.key

# Password protecting private key.  Leave blank if there is no password.
pip.wssecurity.signingPriKeyPwd=

# For signature verification.  Provide a space separated list of file paths
pip.wssecurity.caCertFilePathList=%(testConfigDir)s/ca/badc-ca.crt

# ValueType for the BinarySecurityToken added to the WSSE header
pip.wssecurity.reqBinSecTokValType=X509v3

# Add a timestamp element to an outbound message
pip.wssecurity.addTimestamp=True
